# -*-sh-*-
# nexpose environment
. ~/rapid7/nexpose/src/environment.sh

# invisibles env
. ~/.invisibles_functions

platform='unknown'
unamestr=$(uname)
if [[ "$unamestr" == 'Linux' ]]; then
   platform='linux'
elif [[ "$unamestr" == 'FreeBSD' ]]; then
   platform='freebsd'
fi

alias nuke-local='sudo chown -R $USER:$USER ~/rapid7; sudo chown -R $USER:$USER ~/.m2; sudo id && test -n $NEXPOSE_ROOT && cd $NEXPOSE_ROOT/src && sudo killall -u nxpgsql ; sudo rm -Rf ../deploy && ant clean compile full-redeploy-local; ./run.sh nexpose'
alias splat-local='sudo chown -R $USER:$USER ~/rapid7; sudo chown -R $USER:$USER ~/.m2; sudo id && test -n $NEXPOSE_ROOT && cd $NEXPOSE_ROOT/src && sudo killall -u nxpgsql ; sudo rm -Rf ../deploy && ant clean compile full-redeploy-local'
alias nuke='sudo chown -R $USER:$USER ~/rapid7; sudo chown -R $USER:$USER ~/.m2; sudo id && test -n $NEXPOSE_ROOT && cd $NEXPOSE_ROOT/src && sudo killall -u nxpgsql ; sudo rm -Rf ../deploy && ant clean compile full-redeploy; sudo ./run.sh nexpose'
alias splat='sudo chown -R $USER:$USER ~/rapid7; sudo chown -R $USER:$USER ~/.m2; sudo id && test -n $NEXPOSE_ROOT && cd $NEXPOSE_ROOT/src && sudo killall -u nxpgsql ; sudo rm -Rf ../deploy && ant clean compile full-redeploy'
alias run_engine='sudo id && test -n $NEXPOSE_ROOT && cd $NEXPOSE_ROOT/src; sudo rm -rf ../deploy-nse && sudo cp -R $NEXPOSE_ROOT/deploy/ $NEXPOSE_ROOT/deploy-nse/ && sudo ./run.sh engine'

alias nexsrc='cd ~/rapid7/nexpose/src'
alias cukesrc='cd ~/rapid7/nexpose/src/internal/private/cucumber'
alias content='cd ~/rapid7/nexpose-content'
alias content-schema='cd ~/rapid7/nexpose-content-schema'
alias pfp='cd ~/rapid7/protocol-fingerprinter'
alias r7shared='cd ~/rapid7/nexpose-r7shared'
alias nsc='cd ~/rapid7/nexpose/deploy/nsc'
alias nsclog='cd ~/rapid7/nexpose/deploy/nsc/logs'
alias qa-tools='cd /home/rkirk/rapid7/vuln-tools/qa-tools/nexpose-tools'
alias jess-resources='cd ~/rapid7/jess-resources/'
alias jess-core='cd ~/rapid7/jess-core/'
alias assessment-framework='cd ~/rapid7/assessment-framework/'
alias network-client='cd ~/rapid7/network-client/'
alias vuln-tools='cd ~/rapid7/vuln-tools/'
alias puffins='cd ~/rapid7/puffins/'
alias puffincuke='cd ~/rapid7/puffins/cucumber'
alias fingerprinting-base='cd ~/rapid7/fingerprinting-base'
alias assessment-core='cd ~/rapid7/assessment-core'
alias logsink='cd ~/rapid7/logsink'

# RFCs
alias update-rfcs='rsync -avz --delete ftp.rfc-editor.org::rfcs-text-only ~/rapid7/RFCs/rfc && rsync -avz --delete ftp.rfc-editor.org::ids-text-only ~/rapid7/RFCs/ids'

# RFC search
function rfcsearch
{
    for f in find ~/rapid7/RFCs -type f ; do head -n 20 $f | if [ $(grep -i "$1" - | wc -l) -ne 0 ]; then echo "$f: $(head -n 20 $f |grep -i "$1" - )";fi; done
}

# delete_sites_on some-console.dev.lax.rapid7.com
delete_sites_on()
{
   ruby ~/.nexpose_helpers/delete_all_sites_on.rb "$1"
}

# delete_scan_templates_on some-console.dev.lax.rapid7.com
delete_scan_templates_on()
{
  ruby ~/.nexpose_helpers/delete_scan_templates_on.rb "$1"
}

# get_reports_on some-console.dev.lax.rapid7.com
get_reports_on()
{
  ruby ~/.nexpose_helpers/get_reports_on.rb "$1"
}

nxpwait()
{
    curDir=`pwd`
    cd ~/rapid7/vuln-tools
    if [ -z $1 ]; then
        bundle exec ./qa-tools/nexpose-tools/nxpwait
    else
        bundle exec ./qa-tools/nexpose-tools/nxpwait $1
    fi
    cd "$curDir"
}

# Enumerate .clp TAGS file
clp-tags()
{
    curDir=`pwd`
    cd ~/rapid7/jess-resources/
    rm -f TAGS && find jess java -name "*.clp" -print0 | xargs -0 etags --append --language=lisp -o TAGS
    cd "$curDir"
}

# Set debug logging
nex_debug()
{
  for i in $NEXPOSE_ROOT/deploy/*/conf/logging.xml; do sed -i -e 's!<property name="default-level" value="INFO"/>!<property name="default-level" value="DEBUG"/>!' $i; done
}

# Set info logging
nex_info()
{
  for i in $NEXPOSE_ROOT/deploy/*/conf/logging.xml; do sed -i -e 's!<property name="default-level" value="DEBUG"/>!<property name="default-level" value="INFO"/>!' $i; done
}

nex_truncate_logs()
{
    for i in $NEXPOSE_ROOT/deploy/nsc/logs/*.log; do sudo truncate -s 0 $i; done
}

# Go setup
export GOPATH=~/.r7-terraform/vendor
export GOBIN=~/.r7-terraform/vendor/bin
export PATH=~/.r7-terraform/vendor/bin:$PATH

# python from brew
export PATH=/usr/local/opt/python3/libexec/bin:$PATH

# get scm url from an artifact, e.g. 
# $ get_artifact_repo_url com.rapid7 metrics
# https://github.com/rapid7/metrics
get_artifact_repo_url() {
  local artifact_group=$1
  local artifact_name=$2

  if [ -z "$artifact_group" ] || [ -z "$artifact_name" ]; then
    echo "Error: artifact_group or artifact_name not specified!" >&2
    echo "Usage: get_artifact_repo_url artifact_group artifact_name" >&2
    return
  fi

  #mvn dependency:copy -Dartifact="$artifact_group:$artifact_name:LATEST:pom" -DoutputDirectory=${TMPDIR} -Dmdep.stripVersion=true > /dev/null
  mvn dependency:copy -Dartifact="$artifact_group:$artifact_name:LATEST:pom" -DoutputDirectory=${TMPDIR} -Dmdep.stripVersion=true
  xmllint --xpath '/*[local-name()="project"]/*[local-name()="scm"]/*[local-name()="url"]/text()' "/${TMPDIR}/${artifact_name}.pom"
}