;; Object misc/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "misc/"
  :tables (list 
   (semanticdb-table "misc.h"
    :major-mode 'c++-mode
    :tags 
        '( ("MISC_H" variable (:constant-flag t) nil [802 808])
            ("QVector" include (:system-flag t) nil [979 997])
            ("STRINGIFY" variable (:constant-flag t) nil [1241 1250])
            ("XSTRINGIFY" variable (:constant-flag t) nil [1276 1286])
            ("ASSIGNABLE_QVECTOR" type
               (:template 
                  ( ("SW" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1704 1711])
                    ("assign" function
                       (:arguments 
                          ( ("" variable
                               (:typemodifiers ("typename")
                                :type ("QVector" type
                                     (:template-specifier 
                                        ( ("SW" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2128 2149])
                            ("beg" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2150 2163])
                            ("" variable
                               (:typemodifiers ("typename")
                                :type ("QVector" type
                                     (:template-specifier 
                                        ( ("SW" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2164 2185])
                            ("end" variable (:type ("iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2186 2199]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2115 2410])
                    ("=" function
                       (:operator-flag t
                        :arguments 
                          ( ("copy" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ASSIGNABLE_QVECTOR" type
                                     (:template-specifier 
                                        ( ("SW" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [2806 2841]))                          
                        :type ("ASSIGNABLE_QVECTOR" type
                             (:template-specifier 
                                ( ("SW" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [2772 2908])
                    ("protected" label nil (reparse-symbol classsubparts) [2913 2923])
                    ("private" label nil (reparse-symbol classsubparts) [2928 2936]))                  
                :superclasses 
                  ( ("QVector" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  )
                nil [1631 2939])
            ("UNSIGNED_CHAR_VECTOR" type
               (:typedef ("ASSIGNABLE_QVECTOR" type
                     (:template-specifier 
                        ( ("unsigned char" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :superclasses "ASSIGNABLE_QVECTOR"
                :type "typedef")
                nil [2941 3005])
            ("UNSIGNED_CHAR_VECTOR_SIZE" variable
               (:constant-flag t
                :type "int")
                nil [3006 3051])
            ("UNSIGNED_INT_VECTOR" type
               (:typedef ("ASSIGNABLE_QVECTOR" type
                     (:template-specifier 
                        ( ("unsigned int" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :superclasses "ASSIGNABLE_QVECTOR"
                :type "typedef")
                nil [3053 3115])
            ("UNSIGNED_INT_VECTOR_SIZE" variable
               (:constant-flag t
                :type "int")
                nil [3116 3160])
            ("POINTABLE" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [3425 3432])
                    ("POINTABLE" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("POINTABLE" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3437 3450])
                    ("POINTABLE" function
                       (:prototype-flag t
                        :destructor-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [3477 3499])
                    ("protected" label nil (reparse-symbol classsubparts) [3728 3738])
                    ("private" label nil (reparse-symbol classsubparts) [3743 3751]))                  
                :type "class")
                nil [3404 3776]))          
    :file "misc.h"
    :pointmax 3879
    :fsize 3878
    :lastmodtime '(21907 59825 740656 668000)
    :unmatched-syntax '((symbol 3756 . 3773) (punctuation 2185 . 2186) (punctuation 2184 . 2185) (punctuation 2149 . 2150) (punctuation 2148 . 2149))
    :lexical-table 
        '(("MISC_H")
          ("XSTRINGIFY" (spp-arg-list ("x") 1286 . 1289) . ((punctuation "#" 1290 . 1291) (symbol "x" 1291 . 1292)))
          ("STRINGIFY" (spp-arg-list ("x") 1250 . 1253) . ((symbol "XSTRINGIFY" 1254 . 1264) (semantic-list "(x)" 1264 . 1267)))
          )

    )
   )
  :file "!home!rkirk!dev!pace!sandbox!TCR!src!pace!middleware!ble2!framework!misc!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
