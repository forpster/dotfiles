;; Object hardware/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "hardware/"
  :tables (list 
   (semanticdb-table "platform_serialisation.h"
    :major-mode 'c++-mode
    :tags 
        '( ("__PLATFORM_SERIALISATION_H__" variable (:constant-flag t) nil [46 74])
            ("hyp_defs.h" include nil nil [76 97])
            ("bchp_sun_top_ctrl.h" include nil nil [98 128])
            ("bchp_gio.h" include nil nil [129 150])
            ("UNAVAILABLE" variable (:constant-flag t) nil [193 204])
            ("FLASH_OFFSET_OF_SERIALIZATION_DATA" variable (:constant-flag t) nil [339 373])
            ("SERIALISATION_PARTITION" variable (:constant-flag t) nil [471 494])
            ("RUNTIME_BL_IMAGE_PARTITION" variable (:constant-flag t) nil [603 629])
            ("FLASH_OFFSET_OF_SPCB_DATA" variable (:constant-flag t) nil [716 741])
            ("SPCB_PARTITION" variable (:constant-flag t) nil [845 859])
            ("SPCB_PARTITION_NUM" variable (:constant-flag t) nil [979 997])
            ("CSSK_PARTITION_NUM" variable (:constant-flag t) nil [1020 1038])
            ("FLASH_OFFSET_OF_IMAGE_DATA" variable (:constant-flag t) nil [1111 1137])
            ("RUNTIME_PARTITION_NUMBER" variable (:constant-flag t) nil [1227 1251])
            ("BOOTLOADER_PARTITION_NUMBER" variable (:constant-flag t) nil [1267 1294])
            ("IMAGE_HEADER_OFFSET_1" variable (:constant-flag t) nil [1307 1328])
            ("IMAGE_HEADER_OFFSET_2" variable (:constant-flag t) nil [1372 1393])
            ("IMAGE_VERSION_OFFSET_1" variable (:constant-flag t) nil [1435 1457])
            ("IMAGE_VERSION_OFFSET_2" variable (:constant-flag t) nil [1500 1522])
            ("IMAGE_HEADER_SIZE" variable (:constant-flag t) nil [1565 1582])
            ("IMAGE_VERSION_SIZE" variable (:constant-flag t) nil [1605 1623])
            ("NUM_GPIO_REGISTERS" variable (:constant-flag t) nil [1687 1705])
            ("GPIO_REGISTER_1_DATA" variable (:constant-flag t) nil [1761 1781])
            ("GPIO_REGISTER_1_MASK" variable (:constant-flag t) nil [1861 1881])
            ("GPIO_REGISTER_1_SHIFT_DOWN" variable (:constant-flag t) nil [1961 1987])
            ("PROPERTY_TYPE" type
               (:typedef ("" type
                     (:members 
                        ( ("PROPERTY_TYPE_SERIALISATION_DATA" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2102 2135])
                          ("PROPERTY_TYPE_IMAGE_DATA" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2139 2164])
                          ("PROPERTY_TYPE_SPCB_DATA" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2168 2192])
                          ("PROPERTY_TYPE_CSSK_DATA" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2196 2220])
                          ("PROPERTY_TYPE_REGISTER_DATA" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2224 2252])
                          ("PROPERTY_TYPE_SERIALISATION_DATA_NAND" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2256 2294])
                          ("PROPERTY_TYPE_GPIO_REGISTER_DATA" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2298 2332]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [2084 2347])
            ("ENDIAN_TYPE" type
               (:typedef ("" type
                     (:members 
                        ( ("ENDIAN_TYPE_NONE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2367 2384])
                          ("ENDIAN_TYPE_LITTLE" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2388 2407])
                          ("ENDIAN_TYPE_BIG" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [2411 2428]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [2349 2441])
            ("PROPERTY_TABLE_ENTRY" type
               (:typedef ("_tag_PROPERTY_TABLE_ENTRY" type (:type "struct") nil nil)
                :superclasses "_tag_PROPERTY_TABLE_ENTRY"
                :type "typedef")
                nil [2511 3088])
            ("_tag_PROPERTY_TABLE_ENTRY" type
               (:members 
                  ( ("regId" variable (:type ("PCT_UInt32" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2556 2576])
                    ("fieldString" variable (:type ("PCT_String" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2610 2636])
                    ("type" variable (:type ("PROPERTY_TYPE" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2665 2684])
                    ("partition" variable (:type ("PCT_String" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2687 2711])
                    ("partition_number" variable (:type ("PCT_UInt32" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2748 2779])
                    ("offset" variable (:type ("PCT_UInt32" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2849 2870])
                    ("size" variable (:type ("PCT_UInt32" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2908 2927])
                    ("endian" variable (:type ("PCT_UInt32" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2983 3004]))                  
                :type "struct")
                nil [2511 3088])
            ("propertyTable" variable
               (:dereference 1
                :type ("PROPERTY_TABLE_ENTRY" type (:type "class") nil nil))
                nil [3146 9117]))          
    :file "platform_serialisation.h"
    :pointmax 9169
    :fsize 10070
    :lastmodtime '(21674 21709 913739 759000)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("GPIO_REGISTER_1_MASK" . ((semantic-list "(0x3c000000)" 1888 . 1900)))
          ("__PLATFORM_SERIALISATION_H__")
          ("UNAVAILABLE" . ((number "0xFFFFFFFF" 212 . 222)))
          ("SPCB_PARTITION_NUM" . ((number "1" 1010 . 1011)))
          ("RUNTIME_PARTITION_NUMBER" . ((semantic-list "(4)" 1255 . 1258)))
          ("FLASH_OFFSET_OF_IMAGE_DATA" . ((semantic-list "(0)" 1138 . 1141)))
          ("BOOTLOADER_PARTITION_NUMBER" . ((semantic-list "(5)" 1295 . 1298)))
          ("FLASH_OFFSET_OF_SERIALIZATION_DATA" . ((semantic-list "(0x0)" 374 . 379)))
          ("SERIALISATION_PARTITION" . ((string "\"/dev/mtd6\"" 506 . 517)))
          ("FLASH_OFFSET_OF_SPCB_DATA" . ((semantic-list "(0x0)" 751 . 756)))
          ("CSSK_PARTITION_NUM" . ((number "4" 1039 . 1040)))
          ("IMAGE_HEADER_OFFSET_1" . ((semantic-list "(0x0)" 1335 . 1340)))
          ("GPIO_REGISTER_1_SHIFT_DOWN" . ((semantic-list "(26)" 1988 . 1992)))
          ("IMAGE_HEADER_OFFSET_2" . ((semantic-list "(0x120)" 1400 . 1407)))
          ("IMAGE_VERSION_OFFSET_1" . ((semantic-list "(IMAGE_HEADER_OFFSET_1 + 24)" 1463 . 1491)))
          ("IMAGE_VERSION_OFFSET_2" . ((semantic-list "(IMAGE_HEADER_OFFSET_2 + 24)" 1528 . 1556)))
          ("IMAGE_HEADER_SIZE" . ((semantic-list "(4)" 1593 . 1596)))
          ("RUNTIME_BL_IMAGE_PARTITION" . ((string "\"/dev/nandflash\"" 638 . 654)))
          ("NUM_GPIO_REGISTERS" . ((semantic-list "(1)" 1714 . 1717)))
          ("GPIO_REGISTER_1_DATA" . ((semantic-list "(BCHP_GIO_DATA_LO)" 1788 . 1806)))
          ("SPCB_PARTITION" . ((string "\"/dev/nandflash\"" 880 . 896)))
          ("IMAGE_VERSION_SIZE" . ((semantic-list "(4)" 1633 . 1636)))
          )

    )
   (semanticdb-table "hyp_defs.h"
    :major-mode 'c++-mode
    :tags 
        '( ("__HYP_DEFS_H__" variable (:constant-flag t) nil [32 46])
            ("I2C_BUS_SPEED_400kHz" variable (:constant-flag t) nil [133 153])
            ("I2C_BUS_SPEED_100kHz" variable (:constant-flag t) nil [175 195])
            ("MAX_I2C_BUSES" variable (:constant-flag t) nil [248 261])
            ("I2C_BUS_0_SPEED" variable (:constant-flag t) nil [374 389])
            ("I2C_BUS_1_SPEED" variable (:constant-flag t) nil [425 440])
            ("I2C_BUS_2_SPEED" variable (:constant-flag t) nil [476 491])
            ("I2C_BUS_3_SPEED" variable (:constant-flag t) nil [527 542])
            ("I2C_BUS_4_SPEED" variable (:constant-flag t) nil [578 593])
            ("I2C_HDMI_BUS" variable (:constant-flag t) nil [885 897])
            ("I2C_HDMI_SPEED" variable (:constant-flag t) nil [939 953])
            ("I2C_HMDI_ADDRESS" variable (:constant-flag t) nil [1000 1016])
            ("I2C_TEMPSENSOR_BUS" variable (:constant-flag t) nil [1094 1112])
            ("I2C_TEMP_SENSOR_SPEED" variable (:constant-flag t) nil [1155 1176])
            ("I2C_TEMPSENSOR_ADDRESS" variable (:constant-flag t) nil [1222 1244])
            ("I2C_FP_BUS" variable (:constant-flag t) nil [1324 1334])
            ("I2C_FP_SPEED" variable (:constant-flag t) nil [1380 1392])
            ("I2C_FP_ADDRESS" variable (:constant-flag t) nil [1446 1460])
            ("I2C_EEPROM_BUS" variable (:constant-flag t) nil [1534 1548])
            ("I2C_EEPROM_SPEED" variable (:constant-flag t) nil [1590 1606])
            ("I2C_EEPROM_ADDRESS" variable (:constant-flag t) nil [1652 1670])
            ("I2C_DEMOD_BUS" variable (:constant-flag t) nil [1750 1763])
            ("I2C_DEMOD_SPEED" variable (:constant-flag t) nil [1805 1820])
            ("I2C_DEMOD_ADDRESS" variable (:constant-flag t) nil [1870 1887])
            ("RFMOD_I2C_ADDRESS" variable (:constant-flag t) nil [1986 2003])
            ("REMOD_I2C_BUS_NUMBER" variable (:constant-flag t) nil [2024 2044])
            ("SECURITY_LIB_VKL_ID" variable (:constant-flag t) nil [2217 2236])
            ("SECURITY_LIB_HMAC_VKL_ID" variable (:constant-flag t) nil [2352 2376])
            ("SER_STB_MAN_ID_OFFSET" variable (:constant-flag t) nil [3293 3314])
            ("SER_STB_MODEL_ID_OFFSET" variable (:constant-flag t) nil [3350 3373])
            ("SER_LOADER_MAJ_OFFSET" variable (:constant-flag t) nil [3407 3428])
            ("SER_LOADER_MIN_OFFSET" variable (:constant-flag t) nil [3464 3485])
            ("SER_ETH_MAC_OFFSET" variable (:constant-flag t) nil [3521 3539])
            ("SER_HDCP_KEYS_OFFSET" variable (:constant-flag t) nil [3579 3599])
            ("SER_SRP6_PASSWORD_OFFSET" variable (:constant-flag t) nil [3640 3664])
            ("SER_PLAY_READY_CERT_OFFSET" variable (:constant-flag t) nil [3700 3726])
            ("SER_PLAY_READY_PVT_KEY_OFFSET" variable (:constant-flag t) nil [3761 3790])
            ("SER_STB_SER_NUM_OFFSET" variable (:constant-flag t) nil [3822 3844])
            ("SER_STB_RANDOM_NUMBER_OFFSET" variable (:constant-flag t) nil [3881 3909])
            ("SER_DTCP_CERT_OFFSET" variable (:constant-flag t) nil [3941 3961])
            ("SER_STB_OUI_OFFSET" variable (:constant-flag t) nil [4001 4019])
            ("SER_RSA_BLOB_OFFSET" variable (:constant-flag t) nil [4059 4078])
            ("SER_PCB_SER_NUM_OFFSET" variable (:constant-flag t) nil [4120 4142])
            ("SER_STB_MAN_ID_SIZE" variable (:constant-flag t) nil [4256 4275])
            ("SER_STB_MODEL_ID_SIZE" variable (:constant-flag t) nil [4298 4319])
            ("SER_LOADER_MAJ_SIZE" variable (:constant-flag t) nil [4340 4359])
            ("SER_LOADER_MIN_SIZE" variable (:constant-flag t) nil [4382 4401])
            ("SER_ETH_MAC_SIZE" variable (:constant-flag t) nil [4424 4440])
            ("SER_HDCP_KEYS_SIZE" variable (:constant-flag t) nil [4466 4484])
            ("SER_SRP6_PASSWORD_SIZE" variable (:constant-flag t) nil [4511 4533])
            ("SER_PLAY_READY_CERT_SIZE" variable (:constant-flag t) nil [4555 4579])
            ("SER_PLAY_READY_PVT_KEY_SIZE" variable (:constant-flag t) nil [4600 4627])
            ("SER_STB_SER_NUM_SIZE" variable (:constant-flag t) nil [4645 4665])
            ("SER_STB_RANDOM_NUMBER_SIZE" variable (:constant-flag t) nil [4688 4714])
            ("SER_DTCP_CERT_SIZE" variable (:constant-flag t) nil [4732 4750])
            ("SER_STB_OUI_SIZE" variable (:constant-flag t) nil [4776 4792])
            ("SER_RSA_BLOB_SIZE" variable (:constant-flag t) nil [4818 4835])
            ("SER_PCB_SER_NUM_SIZE" variable (:constant-flag t) nil [4863 4883])
            ("SER_ETH_MAC_SIZE_IN_2BYTES" variable (:constant-flag t) nil [4940 4966])
            ("HDCP_KEY_SIZE_IN_4BYTES" variable (:constant-flag t) nil [5001 5024])
            ("SER_SECTOR_SIZE_IN_FLASH" variable (:constant-flag t) nil [5093 5117])
            ("DEV_SERIALISATION_NAME" variable (:constant-flag t) nil [5143 5165])
            ("SERIALIZATION_DATA_OFFSET" variable (:constant-flag t) nil [5221 5246])
            ("DEV_PRODUCTION_TRACK_NAME" variable (:constant-flag t) nil [5265 5290])
            ("PRODUCTION_TRACKING_DATA_SIZE" variable (:constant-flag t) nil [5347 5376])
            ("PRODUCTION_TRACKING_DATA_OFFSET" variable (:constant-flag t) nil [5389 5420])
            ("EEPROM_PAGE_SIZE" variable (:constant-flag t) nil [5522 5538])
            ("EEPROM_NUMOFPAGE" variable (:constant-flag t) nil [5564 5580])
            ("EEPROM_SIZE" variable (:constant-flag t) nil [5607 5618])
            ("EEPROM_MAP_VER_INFO_OFFSET" variable (:constant-flag t) nil [5799 5825])
            ("EEPROM_MAP_VER_INFO_LEN" variable (:constant-flag t) nil [5845 5868])
            ("NUM_NVRAM_DEVICES" variable (:constant-flag t) nil [6110 6127])
            ("BLECA_NVRAM_DEVICE_SIZE" variable (:constant-flag t) nil [6254 6277])
            ("BLECA_NUM_RECORDS" variable (:constant-flag t) nil [6335 6352])
            ("BLECA_RECORD_SIZE" variable (:constant-flag t) nil [6422 6439])
            ("BLECA_MTD_DEVICE" variable (:constant-flag t) nil [6522 6538])
            ("IRDETO_NVRAM_DEVICE_SIZE" variable (:constant-flag t) nil [6651 6675])
            ("IRDETO_NUM_RECORDS" variable (:constant-flag t) nil [6738 6756])
            ("IRDETO_RECORD_SIZE" variable (:constant-flag t) nil [6826 6844])
            ("IRDETO_MTD_DEVICE" variable (:constant-flag t) nil [6928 6945])
            ("HDD_POWER_GPIO_PIN" variable (:constant-flag t) nil [7004 7022])
            ("FP_MAX_CALLBACKS" variable (:constant-flag t) nil [7046 7062])
            ("FPKEY_UNKNOWN" variable (:constant-flag t) nil [7086 7099])
            ("FPKEY_POWER_GPIO_TYPE" variable (:constant-flag t) nil [7234 7255])
            ("FPKEY_POWER_GPIO_NUMBER" variable (:constant-flag t) nil [7329 7352])
            ("FPKEY_CHANNEL_UP_GPIO_TYPE" variable (:constant-flag t) nil [7453 7479])
            ("FPKEY_CHANNEL_UP_GPIO_NUMBER" variable (:constant-flag t) nil [7509 7537])
            ("FPKEY_CHANNEL_DOWN_GPIO_TYPE" variable (:constant-flag t) nil [7565 7593])
            ("FPKEY_CHANNEL_DOWN_GPIO_NUMBER" variable (:constant-flag t) nil [7621 7651])
            ("FPKEY_UP_GPIO_TYPE" variable (:constant-flag t) nil [7677 7695])
            ("FPKEY_UP_GPIO_NUMBER" variable (:constant-flag t) nil [7733 7753])
            ("FPKEY_DOWN_GPIO_TYPE" variable (:constant-flag t) nil [7789 7809])
            ("FPKEY_DOWN_GPIO_NUMBER" variable (:constant-flag t) nil [7845 7867])
            ("FPKEY_LEFT_GPIO_TYPE" variable (:constant-flag t) nil [7901 7921])
            ("FPKEY_LEFT_GPIO_NUMBER" variable (:constant-flag t) nil [7956 7978])
            ("FPKEY_RIGHT_GPIO_TYPE" variable (:constant-flag t) nil [8012 8033])
            ("FPKEY_RIGHT_GPIO_NUMBER" variable (:constant-flag t) nil [8068 8091])
            ("FPKEY_BACKUP_GPIO_TYPE" variable (:constant-flag t) nil [8124 8146])
            ("FPKEY_BACKUP_GPIO_NUMBER" variable (:constant-flag t) nil [8180 8204])
            ("FPKEY_SELECT_GPIO_TYPE" variable (:constant-flag t) nil [8236 8258])
            ("FPKEY_SELECT_GPIO_NUMBER" variable (:constant-flag t) nil [8292 8316])
            ("FPKEY_GUIDE_GPIO_TYPE" variable (:constant-flag t) nil [8348 8369])
            ("FPKEY_GUIDE_GPIO_NUMBER" variable (:constant-flag t) nil [8404 8427])
            ("FPKEY_VOD_GPIO_TYPE" variable (:constant-flag t) nil [8460 8479])
            ("FPKEY_VOD_GPIO_NUMBER" variable (:constant-flag t) nil [8516 8537])
            ("FPKEY_HELP_GPIO_TYPE" variable (:constant-flag t) nil [8572 8592])
            ("FPKEY_HELP_GPIO_NUMBER" variable (:constant-flag t) nil [8628 8650])
            ("FPKEY_INFO_GPIO_TYPE" variable (:constant-flag t) nil [8683 8703])
            ("FPKEY_INFO_GPIO_NUMBER" variable (:constant-flag t) nil [8739 8761])
            ("FPKEY_SETUP_GPIO_TYPE" variable (:constant-flag t) nil [8795 8816])
            ("FPKEY_SETUP_GPIO_NUMBER" variable (:constant-flag t) nil [8851 8874])
            ("FPKEY_RECORD_GPIO_TYPE" variable (:constant-flag t) nil [8907 8929])
            ("FPKEY_RECORD_GPIO_NUMBER" variable (:constant-flag t) nil [8962 8986])
            ("FPKEY_PLAY_GPIO_TYPE" variable (:constant-flag t) nil [9017 9037])
            ("FPKEY_PLAY_GPIO_NUMBER" variable (:constant-flag t) nil [9072 9094])
            ("FPKEY_PAUSE_GPIO_TYPE" variable (:constant-flag t) nil [9127 9148])
            ("FPKEY_PAUSE_GPIO_NUMBER" variable (:constant-flag t) nil [9182 9205])
            ("FPKEY_STOP_GPIO_TYPE" variable (:constant-flag t) nil [9237 9257])
            ("FPKEY_STOP_GPIO_NUMBER" variable (:constant-flag t) nil [9292 9314])
            ("FPKEY_FF_GPIO_TYPE" variable (:constant-flag t) nil [9348 9366])
            ("FPKEY_FF_GPIO_NUMBER" variable (:constant-flag t) nil [9403 9423])
            ("FPKEY_REW_GPIO_TYPE" variable (:constant-flag t) nil [9458 9477])
            ("FPKEY_REW_GPIO_NUMBER" variable (:constant-flag t) nil [9513 9534])
            ("FPKEY_DVR_GPIO_TYPE" variable (:constant-flag t) nil [9568 9587])
            ("FPKEY_DVR_GPIO_NUMBER" variable (:constant-flag t) nil [9623 9644])
            ("FPKEY_PROXIMITY_GPIO_TYPE" variable (:constant-flag t) nil [9678 9703])
            ("FPKEY_PROXIMITY_GPIO_NUMBER" variable (:constant-flag t) nil [9734 9761])
            ("UNKNOWN_LED_INDEX" variable (:constant-flag t) nil [9831 9848])
            ("IR_LED_INDEX" variable (:constant-flag t) nil [9871 9883])
            ("STANDBY_LED_INDEX" variable (:constant-flag t) nil [9910 9927])
            ("POWER_LED_INDEX" variable (:constant-flag t) nil [9949 9964])
            ("ERROR_LED_INDEX" variable (:constant-flag t) nil [9988 10003])
            ("MESSAGE_LED_INDEX" variable (:constant-flag t) nil [10027 10044])
            ("ONLINE_LED_INDEX" variable (:constant-flag t) nil [10082 10098])
            ("SIGNAL_LED_INDEX" variable (:constant-flag t) nil [10137 10153])
            ("RECORD_LED_INDEX" variable (:constant-flag t) nil [10192 10208])
            ("PLAY_LED_INDEX" variable (:constant-flag t) nil [10247 10261])
            ("IR_LED_INITIAL_STATE" variable (:constant-flag t) nil [10303 10323])
            ("STANDBY_LED_INITIAL_STATE" variable (:constant-flag t) nil [10353 10378])
            ("POWER_LED_INITIAL_STATE" variable (:constant-flag t) nil [10402 10425])
            ("ERROR_LED_INITIAL_STATE" variable (:constant-flag t) nil [10452 10475])
            ("MESSAGE_LED_INITIAL_STATE" variable (:constant-flag t) nil [10502 10527])
            ("ONLINE_LED_INITIAL_STATE" variable (:constant-flag t) nil [10552 10576])
            ("SIGNAL_LED_INITIAL_STATE" variable (:constant-flag t) nil [10602 10626])
            ("RECORD_LED_INITIAL_STATE" variable (:constant-flag t) nil [10652 10676])
            ("PLAY_LED_INITIAL_STATE" variable (:constant-flag t) nil [10702 10724])
            ("LED_IR" variable (:constant-flag t) nil [10753 10759])
            ("RCMM_TOGGLE_MASK" variable (:constant-flag t) nil [10935 10951])
            ("KEY_TOGGLE_MASK" variable (:constant-flag t) nil [10984 10999])
            ("NXSERVER_TIMEOUT" variable (:constant-flag t) nil [11129 11145])
            ("PSU_QUALITY_DETECT" variable (:constant-flag t) nil [11604 11622])
            ("PSU_RIPPLE_MAX_CALLBACKS" variable (:constant-flag t) nil [11646 11670]))          
    :file "hyp_defs.h"
    :pointmax 11765
    :fsize 11764
    :lastmodtime '(21674 21709 914739 753000)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("I2C_BUS_2_SPEED" . ((semantic-list "(I2C_BUS_SPEED_100kHz)" 495 . 517)))
          ("I2C_HDMI_BUS" . ((number "0" 898 . 899)))
          ("I2C_HDMI_SPEED" . ((semantic-list "(I2C_BUS_0_SPEED)" 954 . 971)))
          ("I2C_TEMPSENSOR_ADDRESS" . ((number "0x70" 1245 . 1249)))
          ("RFMOD_I2C_ADDRESS" . ((number "0x65" 2011 . 2015)))
          ("IRDETO_NUM_RECORDS" . ((semantic-list "(3)" 6763 . 6766)))
          ("FPKEY_PLAY_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 9103 . 9118)))
          ("FPKEY_STOP_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 9268 . 9283)))
          ("STANDBY_LED_INDEX" . ((number "1" 9939 . 9940)))
          ("MAX_I2C_BUSES" . ((semantic-list "(5)" 263 . 266)))
          ("I2C_BUS_3_SPEED" . ((semantic-list "(I2C_BUS_SPEED_400kHz)" 546 . 568)))
          ("I2C_HMDI_ADDRESS" . ((number "0x50" 1017 . 1021)))
          ("I2C_FP_ADDRESS" . ((number "0x51" 1461 . 1465)))
          ("SECURITY_LIB_HMAC_VKL_ID" . ((symbol "NEXUS_SecurityVirtualKeyladderID_eVKL3" 2377 . 2415)))
          ("SER_STB_MAN_ID_SIZE" . ((number "1" 4288 . 4289)))
          ("SER_SRP6_PASSWORD_SIZE" . ((number "128" 4543 . 4546)))
          ("BLECA_MTD_DEVICE" . ((string "\"/dev/mtd2\"" 6546 . 6557)))
          ("FPKEY_CHANNEL_UP_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 7484 . 7499)))
          ("FPKEY_CHANNEL_UP_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 7540 . 7555)))
          ("FPKEY_BACKUP_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 8211 . 8226)))
          ("FPKEY_PLAY_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 9048 . 9063)))
          ("FPKEY_REW_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 9489 . 9504)))
          ("ERROR_LED_INDEX" . ((number "3" 10017 . 10018)))
          ("STANDBY_LED_INITIAL_STATE" . ((symbol "DISC_LED_ON" 10382 . 10393)))
          ("RECORD_LED_INITIAL_STATE" . ((symbol "DISC_LED_OFF" 10681 . 10693)))
          ("NXSERVER_TIMEOUT" . ((semantic-list "(60)" 11158 . 11162)))
          ("I2C_BUS_4_SPEED" . ((semantic-list "(I2C_BUS_SPEED_100kHz)" 597 . 619)))
          ("I2C_EEPROM_SPEED" . ((semantic-list "(I2C_BUS_1_SPEED)" 1607 . 1624)))
          ("REMOD_I2C_BUS_NUMBER" . ((number "2" 2046 . 2047)))
          ("SER_STB_OUI_OFFSET" . ((number "0x240E" 4033 . 4039)))
          ("SER_RSA_BLOB_OFFSET" . ((number "0x2412" 4091 . 4097)))
          ("SER_ETH_MAC_SIZE" . ((number "6" 4456 . 4457)))
          ("HDCP_KEY_SIZE_IN_4BYTES" . ((semantic-list "(288)" 5032 . 5037)))
          ("MESSAGE_LED_INITIAL_STATE" . ((symbol "DISC_LED_OFF" 10531 . 10543)))
          ("I2C_EEPROM_ADDRESS" . ((number "0x50" 1671 . 1675)))
          ("SER_ETH_MAC_SIZE_IN_2BYTES" . ((number "3" 4972 . 4973)))
          ("PRODUCTION_TRACKING_DATA_SIZE" . ((number "4" 5379 . 5380)))
          ("EEPROM_NUMOFPAGE" . ((number "32" 5596 . 5598)))
          ("BLECA_NVRAM_DEVICE_SIZE" . ((semantic-list "(32 * 1024)" 6278 . 6289)))
          ("IRDETO_MTD_DEVICE" . ((string "\"/dev/mtd3\"" 6953 . 6964)))
          ("FPKEY_DOWN_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 7820 . 7835)))
          ("FPKEY_VOD_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 8547 . 8562)))
          ("FPKEY_HELP_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 8603 . 8618)))
          ("FPKEY_RECORD_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 8993 . 9008)))
          ("IR_LED_INITIAL_STATE" . ((symbol "DISC_LED_OFF" 10332 . 10344)))
          ("I2C_FP_SPEED" . ((semantic-list "(I2C_BUS_1_SPEED)" 1393 . 1410)))
          ("I2C_EEPROM_BUS" . ((number "3" 1549 . 1550)))
          ("I2C_DEMOD_BUS" . ((number "3" 1764 . 1765)))
          ("SER_LOADER_MIN_SIZE" . ((number "1" 4414 . 4415)))
          ("SER_STB_RANDOM_NUMBER_SIZE" . ((number "128" 4720 . 4723)))
          ("SER_SECTOR_SIZE_IN_FLASH" . 
              ((number "128" 5123 . 5126) (punctuation "*" 5127 . 5128) (number "1024" 5129 . 5133)))
          ("BLECA_RECORD_SIZE" . ((semantic-list "(64 * 1024)" 6446 . 6457)))
          ("FPKEY_RIGHT_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 8099 . 8114)))
          ("FPKEY_BACKUP_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 8155 . 8170)))
          ("FPKEY_SELECT_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 8267 . 8282)))
          ("FPKEY_STOP_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 9323 . 9338)))
          ("FPKEY_PROXIMITY_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 9709 . 9724)))
          ("PLAY_LED_INDEX" . ((symbol "UNKNOWN_LED_INDEX" 10276 . 10293)))
          ("ONLINE_LED_INITIAL_STATE" . ((symbol "DISC_LED_OFF" 10581 . 10593)))
          ("SECURITY_LIB_VKL_ID" . ((symbol "NEXUS_SecurityVirtualKeyladderID_eVKL2" 2237 . 2275)))
          ("SER_LOADER_MAJ_OFFSET" . ((number "0x02" 3439 . 3443)))
          ("BLECA_NUM_RECORDS" . ((semantic-list "(3)" 6359 . 6362)))
          ("FPKEY_POWER_GPIO_TYPE" . ((semantic-list "(4)" 7265 . 7268)))
          ("FPKEY_UP_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 7708 . 7723)))
          ("FPKEY_INFO_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 8770 . 8785)))
          ("SIGNAL_LED_INITIAL_STATE" . ((symbol "DISC_LED_OFF" 10631 . 10643)))
          ("PLAY_LED_INITIAL_STATE" . ((symbol "DISC_LED_OFF" 10731 . 10743)))
          ("SER_PLAY_READY_CERT_OFFSET" . ((number "0x506" 3732 . 3737)))
          ("SER_STB_SER_NUM_OFFSET" . ((number "0x2136" 3854 . 3860)))
          ("SER_PCB_SER_NUM_OFFSET" . ((number "0x2C52" 4152 . 4158)))
          ("SER_PLAY_READY_CERT_SIZE" . ((number "6192" 4587 . 4591)))
          ("EEPROM_MAP_VER_INFO_LEN" . ((number "6" 5869 . 5870)))
          ("FPKEY_CHANNEL_DOWN_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 7596 . 7611)))
          ("FPKEY_DVR_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 9654 . 9669)))
          ("UNKNOWN_LED_INDEX" . ((punctuation "-" 9859 . 9860) (number "1" 9860 . 9861)))
          ("POWER_LED_INDEX" . ((number "2" 9978 . 9979)))
          ("__HYP_DEFS_H__")
          ("I2C_BUS_SPEED_100kHz" . ((semantic-list "(100000)" 200 . 208)))
          ("I2C_DEMOD_ADDRESS" . ((number "0x6c" 1888 . 1892)))
          ("SER_HDCP_KEYS_OFFSET" . ((number "0x0A" 3611 . 3615)))
          ("SER_SRP6_PASSWORD_OFFSET" . ((number "0x486" 3672 . 3677)))
          ("SER_STB_RANDOM_NUMBER_OFFSET" . ((number "0x2146" 3913 . 3919)))
          ("SER_STB_OUI_SIZE" . ((number "4" 4808 . 4809)))
          ("DEV_SERIALISATION_NAME" . ((string "\"/dev/mtd3\"" 5173 . 5184)))
          ("EEPROM_PAGE_SIZE" . ((number "8" 5554 . 5555)))
          ("FPKEY_UNKNOWN" . ((semantic-list "(0xFF)" 7117 . 7123)))
          ("FPKEY_DOWN_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 7876 . 7891)))
          ("FPKEY_GUIDE_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 8435 . 8450)))
          ("FPKEY_HELP_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 8659 . 8674)))
          ("FPKEY_SETUP_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 8826 . 8841)))
          ("SIGNAL_LED_INDEX" . ((symbol "UNKNOWN_LED_INDEX" 10166 . 10183)))
          ("PSU_RIPPLE_MAX_CALLBACKS" . ((number "10" 11674 . 11676)))
          ("I2C_BUS_SPEED_400kHz" . ((semantic-list "(400000)" 158 . 166)))
          ("I2C_TEMPSENSOR_BUS" . ((number "1" 1113 . 1114)))
          ("I2C_TEMP_SENSOR_SPEED" . ((semantic-list "(I2C_BUS_1_SPEED)" 1177 . 1194)))
          ("SER_PLAY_READY_PVT_KEY_OFFSET" . ((number "0x1D36" 3793 . 3799)))
          ("SER_STB_MODEL_ID_SIZE" . ((number "1" 4330 . 4331)))
          ("PRODUCTION_TRACKING_DATA_OFFSET" . ((number "0x00" 5421 . 5425)))
          ("FPKEY_CHANNEL_DOWN_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 7652 . 7667)))
          ("FPKEY_LEFT_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 7987 . 8002)))
          ("FPKEY_RECORD_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 8938 . 8953)))
          ("FPKEY_PAUSE_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 9213 . 9228)))
          ("FPKEY_FF_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 9434 . 9449)))
          ("FPKEY_REW_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 9544 . 9559)))
          ("FPKEY_DVR_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 9599 . 9614)))
          ("SER_STB_MAN_ID_OFFSET" . ((number "0x00" 3325 . 3329)))
          ("SER_STB_MODEL_ID_OFFSET" . ((number "0x01" 3382 . 3386)))
          ("SER_ETH_MAC_OFFSET" . ((number "0x04" 3553 . 3557)))
          ("SER_PLAY_READY_PVT_KEY_SIZE" . ((number "1024" 4632 . 4636)))
          ("FPKEY_POWER_GPIO_NUMBER" . ((semantic-list "(0x02)" 7360 . 7366)))
          ("FPKEY_RIGHT_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 8043 . 8058)))
          ("FPKEY_PAUSE_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 9158 . 9173)))
          ("FPKEY_FF_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 9379 . 9394)))
          ("ERROR_LED_INITIAL_STATE" . ((symbol "DISC_LED_OFF" 10481 . 10493)))
          ("LED_IR" . ((number "2" 10782 . 10783)))
          ("I2C_DEMOD_SPEED" . ((semantic-list "(I2C_BUS_3_SPEED)" 1821 . 1838)))
          ("SER_DTCP_CERT_SIZE" . ((number "584" 4764 . 4767)))
          ("SER_RSA_BLOB_SIZE" . ((number "2112" 4850 . 4854)))
          ("IRDETO_NVRAM_DEVICE_SIZE" . ((semantic-list "((512 * 1024) - 4)" 6676 . 6694)))
          ("FP_MAX_CALLBACKS" . ((number "3" 7075 . 7076)))
          ("FPKEY_GUIDE_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 8379 . 8394)))
          ("FPKEY_INFO_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 8714 . 8729)))
          ("FPKEY_SETUP_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 8882 . 8897)))
          ("MESSAGE_LED_INDEX" . ((symbol "UNKNOWN_LED_INDEX" 10056 . 10073)))
          ("RECORD_LED_INDEX" . ((symbol "UNKNOWN_LED_INDEX" 10221 . 10238)))
          ("RCMM_TOGGLE_MASK" . ((number "0x00008000" 10964 . 10974)))
          ("I2C_BUS_0_SPEED" . ((semantic-list "(I2C_BUS_SPEED_100kHz)" 393 . 415)))
          ("SER_LOADER_MIN_OFFSET" . ((number "0x03" 3496 . 3500)))
          ("SER_DTCP_CERT_OFFSET" . ((number "0x21C6" 3973 . 3979)))
          ("SER_HDCP_KEYS_SIZE" . ((number "1148" 4498 . 4502)))
          ("SERIALIZATION_DATA_OFFSET" . ((number "0x00" 5251 . 5255)))
          ("EEPROM_SIZE" . ((semantic-list "(EEPROM_NUMOFPAGE * EEPROM_PAGE_SIZE)" 5622 . 5659)))
          ("NUM_NVRAM_DEVICES" . ((semantic-list "(2)" 6128 . 6131)))
          ("HDD_POWER_GPIO_PIN" . ((number "0xFF" 7033 . 7037)))
          ("FPKEY_UP_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 7764 . 7779)))
          ("FPKEY_SELECT_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 8323 . 8338)))
          ("ONLINE_LED_INDEX" . ((symbol "UNKNOWN_LED_INDEX" 10111 . 10128)))
          ("POWER_LED_INITIAL_STATE" . ((symbol "DISC_LED_OFF" 10431 . 10443)))
          ("KEY_TOGGLE_MASK" . ((symbol "RCMM_TOGGLE_MASK" 11013 . 11029)))
          ("I2C_BUS_1_SPEED" . ((semantic-list "(I2C_BUS_SPEED_100kHz)" 444 . 466)))
          ("I2C_FP_BUS" . ((number "1" 1335 . 1336)))
          ("SER_LOADER_MAJ_SIZE" . ((number "1" 4372 . 4373)))
          ("SER_STB_SER_NUM_SIZE" . ((number "16" 4677 . 4679)))
          ("SER_PCB_SER_NUM_SIZE" . ((number "15" 4895 . 4897)))
          ("DEV_PRODUCTION_TRACK_NAME" . ((string "\"/dev/mtd4\"" 5295 . 5306)))
          ("EEPROM_MAP_VER_INFO_OFFSET" . ((number "0x00000060" 5826 . 5836)))
          ("IRDETO_RECORD_SIZE" . ((semantic-list "(576 * 1024)" 6851 . 6863)))
          ("FPKEY_LEFT_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 7932 . 7947)))
          ("FPKEY_VOD_GPIO_TYPE" . ((semantic-list "(FPKEY_UNKNOWN)" 8491 . 8506)))
          ("FPKEY_PROXIMITY_GPIO_NUMBER" . ((semantic-list "(FPKEY_UNKNOWN)" 9765 . 9780)))
          ("IR_LED_INDEX" . ((number "1" 9900 . 9901)))
          ("PSU_QUALITY_DETECT" . ((number "87" 11632 . 11634)))
          )

    )
   )
  :file "!home!rkirk!dev!pace!sandbox!D713!project_settings!configuration!hardware!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
