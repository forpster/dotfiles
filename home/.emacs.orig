
;;; Don't know lisp, but I know how to copy...:-)

; packaging
(require 'package)
(add-to-list 'package-archives '("marmalade" . "http://marmalade-repo.org/packages/"))
(add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/"))
(package-initialize)

; load custom packages
(let ((default-directory "~/.emacs.d/lisp/"))
  (normal-top-level-add-to-load-path '("."))
  (normal-top-level-add-subdirs-to-load-path))

(add-to-list 'default-frame-alist '(height . 63))
(add-to-list 'default-frame-alist '(width . 120))
(add-to-list 'default-frame-alist '(top . 0))
;(add-to-list 'default-frame-alist '(left . 795))
(add-to-list 'default-frame-alist '(left . 950))
(if (eq window-system 'w32)
    (set-face-font 'default "-*-Lucida Console-normal-*-*-*-15-*-*-*-*-*-*-*"))
(set-face-font 'default "-*-DejaVu Sans Mono-normal-normal-normal-*-15-*-*-*-m-0-iso10646-1")

(add-hook 'perl-mode-hook 'newline-should-indent)
(add-hook 'c-mode-hook 'newline-should-indent)
(add-hook 'c++-mode-hook 'newline-should-indent)
(defun newline-should-indent ()
  "Do some things specific to perl mode"
  (interactive)
  (local-set-key "\C-m" 'newline-and-indent)
)

;;; vi roolz! (why doesn't emacs like \C-. for a key specification?
;;(global-set-key [(\M-.)] 'call-last-kdb-macro)

(global-set-key [(meta return)] 'hippie-expand)
(global-set-key [f7] 'compile)
;(global-set-key (kbd "C-.") 'find-tag)
(global-set-key "\M-g" 'goto-line)
(global-set-key (kbd "C-c u") 'untabify)
(global-set-key (kbd "C-c i") 'indent-region)
(global-set-key (kbd "C-x C-b") 'ibuffer)
(global-set-key (kbd "C-x b") 'switch-to-buffer)
(global-set-key (kbd "C-c C-v") 'uncomment-region)


(global-font-lock-mode 1)
(transient-mark-mode 1)
(column-number-mode 1)
(line-number-mode 1)
(blink-cursor-mode nil)
(size-indication-mode t)
(show-paren-mode t)
(setq-default show-trailing-whitespace t)

;; auto-open compressed files
(auto-compression-mode 1)

(setq untranslated-filesystem-list '("z:" "r:" "p:" "q:") )

; tab width = 2
(setq-default tab-width 2)
;(setq-default tab-stop-list '(2 4 8 12 16 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100 104 108 112 116 120))
(setq-default indent-tabs-mode nil)

;; (make-hippie-expand-function
;; '(try-expand-dabbrev-visible
;;  try-expand-dabbrev-from-kill
;;  try-expand-dabbrev-all-buffers
;;  try-complete-file-name-partially
;;  try-complete-file-name))

(defun indent-or-complete ()
  "Complete if point is at end of a word, otherwise indent line."
  (interactive)
  (if (looking-at "\\>")
      (dabbrev-expand nil)
    (indent-for-tab-command)
    ))

(defun rok-cleanup ()
  "Untabify and remove trailing whitespace"
  (interactive)
  (untabify (point-min) (point-max))
  (delete-trailing-whitespace))

; Mode specific hoooks
(add-hook 'c-mode-common-hook
	  (function (lambda ()
		      (local-set-key (kbd "<tab>") 'indent-or-complete)
		      )))
(add-hook 'c-mode-common-hook
  (lambda ()
    (require 'doxymacs)
    (doxymacs-mode t)
    (doxymacs-font-lock)))
; HideShow - code folding/collapsing
(add-hook 'c-mode-common-hook
  (lambda()
    (local-set-key (kbd "C-c <right>") 'hs-show-block)
    (local-set-key (kbd "C-c <left>")  'hs-hide-block)
    (local-set-key (kbd "C-c <up>")    'hs-hide-all)
    (local-set-key (kbd "C-c <down>")  'hs-show-all)
    (hs-minor-mode t)
    (setq hs-isearch-open t)))

(add-hook 'python-mode-hook
	  (function (lambda ()
		      (local-set-key (kbd "<tab>") 'indent-or-complete)
                      (add-hook 'write-contents-hooks 'rok-cleanup nil t)
		      )))

(add-hook 'perl-mode-hook
	  (function (lambda ()
		      (local-set-key (kbd "<tab>") 'indent-or-complete)
                      (add-hook 'write-contents-hooks 'rok-cleanup nil t)
		      )))

; think these defaults are over-ridden when c-set-style is called, keeping here for now though
(setq-default c-basic-offset 2                 ; Default spacing to 2
              c-indent-tabs-mode t             ; Pressing TAB should cause indentation
              c-indent-level 2                 ; A TAB is equivilent to two spaces - boo!
              c-argdecl-indent 0               ; Do not indent argument decl's extra
              c-tab-always-indent t
              backward-delete-function nil)    ; do NOT expand tabs when deleting them
(defun my-c-mode-hook ()
  (c-set-style "bsd")
  (setq c-basic-offset 2) ; TAB is two spaces
  (add-hook 'write-contents-hooks 'rok-cleanup nil t))
(add-hook 'c-mode-hook 'my-c-mode-hook)
(add-hook 'c++-mode-hook 'my-c-mode-hook)

(setq default-directory "~/dev/")

(setq auto-mode-alist
      (append '(("\\.C$"  . c++-mode)
                ("\\.cc$" . c++-mode)
                ("\\.hh$" . c++-mode)
                ("\\.c$"  . c-mode)
                ("\\.h$"  . c++-mode)
                ("\\.hpp$" . c++-mode)
                ("\\.cpp$" . c++-mode)
                ("\\.t$" . perl-mode)
                ("\\.mak$" . makefile-mode))
              auto-mode-alist))

(invert-face 'default)
(set-cursor-color "white")

(setq mouse-wheel-mode t)

; Dont do big scroll jumps when moving past the last line on top/bottom of screen
(setq
  scroll-margin 0
  scroll-conservatively 100000
  scroll-preserve-screen-position 1)

; Duplicate a line and comment out original
(defun rok-duplicate-line (&optional commentfirst)
  "comment line at point; if COMMENTFIRST is non-nil, comment the original"
  (interactive)
  (beginning-of-line)
  (push-mark)
  (end-of-line)
  (let ((str (buffer-substring (region-beginning) (region-end))))
    (when commentfirst
    (comment-region (region-beginning) (region-end)))
    (insert-string
      (concat (if (= 0 (forward-line 1)) "" "\n") str "\n"))
    (forward-line -1)))
;; duplicate a line
;(global-set-key (kbd "C-c y") 'rok-duplicate-line)
;; duplicate a line and comment the first
(global-set-key (kbd "C-c c") (lambda()(interactive)(rok-duplicate-line t)))

; Key bindings for doxymacs! Cuz i will forget the buggers otherwise
; C-c d ? will look up documentation for the symbol under the point.
; C-c d r will rescan your Doxygen tags file.
; C-c d f will insert a Doxygen comment for the next function.
; C-c d i will insert a Doxygen comment for the current file.
; C-c d ; will insert a Doxygen comment for a member variable on the current line (like M-;).
; C-c d m will insert a blank multi-line Doxygen comment.
; C-c d s will insert a blank single-line Doxygen comment.
; C-c d @ will insert grouping comments around the current region.
(setq doxymacs-command-character "\\")

; auto find the associated header/cpp
(add-hook 'c-mode-common-hook
          (lambda()
            (local-set-key  (kbd "C-c o") 'ff-find-other-file)))
; tell it to look for the correct sort of associated filename extension
(setq cc-other-file-alist
      '(("\\.cpp$" (".hpp" ".h"))
        ("\\.h$" (".c" ".cpp"))
        ("\\.hpp$" (".cpp"))
        ))
; Setup some search directories for where to look for header files
; todo workout how to avoid .svn folders
(setq cc-search-directories
      '("." "z:/dev/source/*/h" "z:/dev/source/*/h/*" "z:/dev/source/*/h/*/*"))

; automatically add in the closing brackets
(require 'autopair)
(autopair-global-mode 1)

; icicles tab completion power! make sure it loads last to dynamically change key bindings
; but it breaks TAGS, darn
;(require 'icicles)
;(icy-mode 1)
;(put 'downcase-region 'disabled nil)

; winpoint remembers buffer position per window rather than just per buffer
(require 'winpoint)
(window-point-remember-mode 1)

; Add cmake listfile names to the mode list.
(setq auto-mode-alist
	  (append
	   '(("CMakeLists\\.txt\\'" . cmake-mode))
	   '(("\\.cmake\\'" . cmake-mode))
	   auto-mode-alist))
(require 'cmake-mode)

(defun cmake-rename-buffer ()
  "Renames a CMakeLists.txt buffer to cmake-<directory name>."
  (interactive)
  ;(print (concat "buffer-filename = " (buffer-file-name)))
  ;(print (concat "buffer-name     = " (buffer-name)))
  (when (and (buffer-file-name) (string-match "CMakeLists.txt" (buffer-name)))
      ;(setq file-name (file-name-nondirectory (buffer-file-name)))
      (setq parent-dir (file-name-nondirectory (directory-file-name (file-name-directory (buffer-file-name)))))
      ;(print (concat "parent-dir = " parent-dir))
      (setq new-buffer-name (concat "cmake-" parent-dir))
      ;(print (concat "new-buffer-name= " new-buffer-name))
      (rename-buffer new-buffer-name t)
      )
  )

(add-hook 'cmake-mode-hook (function cmake-rename-buffer))

; use plink as default tramp mode
(setq tramp-default-method "plink"
      tramp-default-user "rok"
      tramp-default-host "orion")

; hide startup screen
(setq inhibit-startup-screen t)

; JPO's selinux policy one
(setq auto-mode-alist
      (append
       '(("\\.te$" . policy-mode))
       '(("\\.if$" . policy-mode))
       '(("\\.te.gen$" . policy-mode))
       '(("\\.if.gen$" . policy-mode))
       '(("\\.fc$" . policy-mode))
       auto-mode-alist))
(require 'policy)
(add-hook 'policy-mode-hook
	  (function (lambda ()
                      (add-hook 'write-contents-hooks 'rok-cleanup nil t)
		      )))

(require 'php-mode)
(setq auto-mode-alist
      (append
       '(("\\.php$" . php-mode))
       auto-mode-alist))

; auto revert files if detected they changed on disk (svn id work around:)
(global-auto-revert-mode 1)

;;
;; Setup puppet-mode for autoloading
;;
(autoload 'puppet-mode "puppet-mode" "Major mode for editing puppet manifests")
(add-to-list 'auto-mode-alist '("\\.pp$" . puppet-mode))

; wrong side emacs!
(set-scroll-bar-mode 'right)

; cscope
(require 'xcscope)
(setq cscope-do-not-update-database t)

; Use the GDB visual debugging mode
(setq gdb-many-windows t)
(setq gdb-speedbar-auto-raise t)

;; only split vertically by default
(setq split-width-threshold nil)

; etags with vim style select
(require 'etags-select)
; back up directory tree to get a TAGS file automatically
(defun etags-select-get-tag-files ()
    "Get tag files."
    (if etags-select-use-xemacs-etags-p
        (buffer-tag-table-list)
      (mapcar 'tags-expand-table-name tags-table-list)
      (tags-table-check-computed-list)
      tags-table-computed-list))

(global-set-key "\M-?" 'etags-select-find-tag-at-point)
(global-set-key "\M-." 'etags-select-find-tag)

;; Various key bindings
;; M-; - Comments in any mode
;; M-- - Negate what the following cmd would go so M-- M-; removes comments
